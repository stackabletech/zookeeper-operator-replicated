name: test on replicated

on:
  push:
    branches:
      - main

env:
  KUBECONFIG: /tmp/kubeconfig

jobs:
  compatibility-matrix:
    strategy:
      fail-fast: false
      matrix:
        cluster: [
          {
            distribution: kind,
            version: v1.25.3,
            size: 1,
            instances: "r1.2xlarge"
          }, {
            distribution: aks,
            version: v1.28,
            size: 5,
            instances: "Standard_B8ms"
          }, {
            distribution: eks,
            version: v1.28,
            size: 5,
            instances: "m6i.large"
          }, {
            distribution: gke,
            version: v1.28,
            size: 5,
            instances: "n2-standard-8"
          }, {
            distribution: openshift,
            version: 4.13.0-okd,
            size: 1,
            instances: "r1.2xlarge"
          }, {
            distribution: k3s,
            version: v1.28.3,
            size: 5,
            instances: "r1.xlarge"
          }]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install stackablectl & beku & kuttl
        run: |
          wget --no-verbose https://github.com/stackabletech/stackable-cockpit/releases/download/stackablectl-23.11.1/stackablectl-x86_64-unknown-linux-gnu
          chmod +x stackablectl-x86_64-unknown-linux-gnu
          pipx install beku-stackabletech
          wget --no-verbose https://github.com/kudobuilder/kuttl/releases/download/v0.15.0/kubectl-kuttl_0.15.0_linux_x86_64
          chmod +x kubectl-kuttl_0.15.0_linux_x86_64
          sudo mv kubectl-kuttl_0.15.0_linux_x86_64 /usr/bin/kubectl-kuttl
          PATH=/usr/bin:$PATH
          kubectl kuttl version

      - name: Create Cluster
        id: create-cluster
        uses: replicatedhq/replicated-actions/create-cluster@v1
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          kubernetes-distribution: ${{ matrix.cluster.distribution }}
          kubernetes-version: ${{ matrix.cluster.version }}
          cluster-name: ${{ github.ref_name }}-${{ matrix.cluster.distribution }}-${{ matrix.cluster.version }}
          timeout-minutes: 5
          ttl: 30m
          kubeconfig-path: ${{ env.KUBECONFIG }}
          nodes: ${{ matrix.cluster.size }}
          instance-type: $${{ matrix.cluster.instances }}

      - name: Setup stackable data platform
        run: |
          echo "${{ steps.create-cluster.outputs.cluster-kubeconfig }}" > ${KUBECONFIG}
          ./stackablectl-x86_64-unknown-linux-gnu op in secret commons listener zookeeper

      - name: Run a test
        run: |
          echo "${{ steps.create-cluster.outputs.cluster-kubeconfig }}" > ${KUBECONFIG}
          scripts/run_tests.sh --parallel 2

      - name: Remove Cluster
        if: always()
        id: remove-cluster
        uses: replicatedhq/replicated-actions/remove-cluster@v1
        continue-on-error: true # It could be that the cluster is already removed
        with:
          api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          cluster-id: ${{ steps.create-cluster.outputs.cluster-id }}
